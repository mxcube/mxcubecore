<object class="GphlWorkflowConnection">

    <!-- Directory locations
    - file names below are set as file_name.format(directory_locations) -->
    <directory_locations>
        <!-- Wrapper scripts for GPhL programs - must be reachable from workflow and procesing -->
	<GPHL_SETUP>/data/users/p3l-gleb1/gphl/</GPHL_SETUP>
	<GPHL_RELEASE>/data/users/p3l-gleb1/gphl/GPhL-EMBLHH-20200211/20200206/</GPHL_RELEASE>
        <!--<GPHL_SETUP>/mnt/scratch/rhfogh/mxcube_setup/</GPHL_SETUP>-->
        <!--<GPHL_RELEASE>/mnt/scratch/rhfogh/gphl_release/latest</GPHL_RELEASE>-->
    </directory_locations>

    <!-- If set, run workflow through ssh with selected options -->
    <!-- NB The  Host option is mandatory -->
    <!-- ConfigFile is the ssh configuratino file, passed to ssh with the -F option -->
    <ssh_options>
        <Host>p14dd01</Host>
        <IdentityFile>/home/p3l-gleb1/.ssh/id_rsa</IdentityFile>
        <User>p3l-gleb1</User>
        <StrictHostKeyChecking>no</StrictHostKeyChecking>
        <!--<ConfigFile>/path/to/ssh/config/file</ConfigFile>-->
    </ssh_options>

    <!-- NB Non-absolute file names are interpreted relative to one of the  -->
    <!-- HardwareRepository directories on the lookup path -->

    <software_paths>
        <!-- Location of Java binary to execute for workflow application -->
        <java_binary>/usr/bin/java</java_binary>
        <!-- Debug mode:  -->
        <!--<java_binary>ssh -i /home/rhfogh/.ssh/wf_test_id -o StrictHostKeyChecking=no lonsdale java</java_binary>-->

        <!-- Location of GPhL release, containing program binaries (or their wrapper scripts) -->
        <GPHL_INSTALLATION>{GPHL_RELEASE}/autoPROC/bin/linux64</GPHL_INSTALLATION>

        <!-- Gphl workflow Java classpath. -->
        <!--Should point to all contents of workflow application directory-->
        <gphl_java_classpath>{GPHL_SETUP}/workflow/gphl_java_classes/lib/*</gphl_java_classpath>

        <!-- Directory with workflow config input, e.g. instrumentation.nml -->
	<gphl_beamline_config>{GPHL_SETUP}/beamline_config_embl_hh_p14_202002</gphl_beamline_config>

        <!-- Directory with workflow config input, e.g. instrumentation.nml -->
        <!--<gphl_test_samples>{GPHL_SETUP}/gphl_test_samples</gphl_test_samples>-->
        <gphl_test_samples>{GPHL_SETUP}test_samples</gphl_test_samples>

        <!-- Location of installation used for processing queue (not reachable from BCS computer. -->
        <!-- Passed as environmental variable GPHL_PROC_INSTALLATION. Optional -->
        <!--<gphl_wf_processing_installation>/users/pkeller/GPhL-ESRF/exe</gphl_wf_processing_installation>-->
    </software_paths>

    <!-- Software paths that are passed to global phasing workflow as java properties -->
    <software_properties>

        <!-- Location of GPhL .license directory -->
        <!-- defaults to GPHL_INSTALLATION-->
        <!-- Only needed if you do NOT use the wrapper script : -->
        <co.gphl.wf.bdg_licence_dir>{GPHL_RELEASE}</co.gphl.wf.bdg_licence_dir>

        <!-- Location of executable XDS binary. Mandatory-->
        <co.gphl.wf.xds.bin>/mx-beta/bin/xds_par</co.gphl.wf.xds.bin>
        <!--<co.gphl.wf.xds.bin>/mnt/scratch/rhfogh/gphl_release/XDS/xds_par</co.gphl.wf.xds.bin>-->

        <!-- <Location of individual binaries are optional. -->
        <!-- They default to within GPHL_INSTALLATION -->

        <!-- Location of stratcal binary -->
        <co.gphl.wf.stratcal.bin>{GPHL_SETUP}/scripts/stratcal_wrap.py</co.gphl.wf.stratcal.bin>
<!--        <co.gphl.wf.stratcal.bin>scripts/stratcal_wrap.py</co.gphl.wf.stratcal.bin>-->
        <!-- Location of stratcal-specific license directory - OPTIONAL ->
        <co.gphl.wf.stratcal.bdg_licence_dir>/public/xtal/Server-nightly-alpha-bdg-linux64</co.gphl.wf.stratcal.bdg_licence_dir>
        -->

        <!-- Location of simcal binaries -->
        <co.gphl.wf.simcal.bin>{GPHL_SETUP}/scripts/simcal</co.gphl.wf.simcal.bin>
<!--        <co.gphl.wf.simcal.bin>scripts/simcal</co.gphl.wf.simcal.bin>-->
        <!-- Location of simcal-specific license directory - OPTIONAL ->
        <co.gphl.wf.simcal_predict.bdg_licence_dir>/public/xtal/Server-nightly-alpha-bdg-linux64</co.gphl.wf.stratcal.bdg_licence_dir>
        -->

        <!-- Location of transcal binary -->
        <!--<co.gphl.wf.transcal.bin>{GPHL_SETUP}/scripts/transcal</co.gphl.wf.transcal.bin>-->

        <!-- Location of recen binary -->
        <!--<co.gphl.wf.recen.bin>{GPHL_SETUP}/scripts/recen</co.gphl.wf.recen.bin>-->

        <!-- Path of application that analyses diffractcal (aka rotational
        calibration) data. In practice, this will almost always be a wrapper
        script that sets up the environment properly. -->
        <co.gphl.wf.diffractcal.bin>{GPHL_SETUP}/scripts/aP_wf_rotcal</co.gphl.wf.diffractcal.bin>
<!--        <co.gphl.wf.diffractcal.bin>scripts/aP_wf_rotcal</co.gphl.wf.diffractcal.bin>-->

    </software_properties>

    <!-- Subdirectory under Session.get_process_directory() for GPhL persistence data-->
    <gphl_subdir>GPHL</gphl_subdir>

    <!-- Hosts and ports for py4j java-python gateway, all OPTIONAL-->
    <!-- If not set will use py4j default values, which are as given below-->
    <!-- NB python_host is set automatically to localhost or socket.gethostname()-->
    <!-- NB java_host is not needed as all communication is effectively one-way -->
    <!--<connection_parameters>-->
        <!--<python_port>25334</python_port>-->
        <!--<java_port>25333</java_port>-->
    <!--</connection_parameters>-->

</object>
